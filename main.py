import aiogram
from aiogram import Bot, types
from aiogram.types.message import ContentType
from aiogram.utils.markdown import text

import logging, re
import time

from configure import BOT_TOKEN
import key as kb

from src.search.search import Search

logging.basicConfig(level=logging.INFO)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = aiogram.Bot(token=BOT_TOKEN)
dp = aiogram.Dispatcher(bot)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã help
help_message = text("–ë–æ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π:\n"
                    "‚óè —Å—Ç—É–¥–µ–Ω—Ç–∞ –ø–æ –Ω–æ–º–µ—Ä—É –µ–≥–æ –≥—Ä—É–ø–ø—ã (–ø—Ä–∏–º–µ—Ä: 16–ö–ë(—Å)–†–ó–ü–û);\n"
                    "‚óè –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –ø–æ –§–ò–û (–ø—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á);\n"
                    "–†–µ–∞–ª–∏–∑–æ–≤–∞–Ω –≤—ã–±–æ—Ä –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:\n"
                    "- –Ω–∞ –¥–µ–Ω—å;\n"
                    "- –Ω–∞ –Ω–µ–¥–µ–ª—é;\n"
                    "–§—É–Ω–∫—Ü–∏—è –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –±–æ—Ç–∞ –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –∑–∞–Ω—è—Ç–∏—è—Ö –≤ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ.\n\n"
                    "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                    "/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞. –í—ã–±–æ—Ä —Ä–æ–ª–∏ —Å—Ç—É–¥–µ–Ω—Ç/–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å\n"
                    "/notification - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–ø–æ–≤–µ—â–µ–Ω–∏–π\n"
                    "/help - –ü–æ–º–æ—â—å. –ö—Ä–∞—Ç–∫–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞"
                    )


@dp.callback_query_handler(lambda c: c.data == 'btn_back')
async def callback_button_back(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ', reply_markup=kb.inline_kb_main)


@dp.callback_query_handler(lambda c: c.data == 'btn_student')
async def callback_button_student(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã')


@dp.callback_query_handler(lambda c: c.data == 'btn_teacher')
async def callback_button_teacher(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –§–ò–û')


@dp.message_handler(commands=['start'], state="*")
async def command_start(msg: aiogram.types.Message):
    await msg.answer("–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç schedule_osu_bot!\n", reply_markup=kb.inline_kb_role)


@dp.message_handler(commands=['help'], state="*")
async def command_help(msg: aiogram.types.Message):
    await msg.answer(help_message)


# –í—ã–≤–æ–¥ –∫–æ–º–∞–Ω–¥—ã /mode - –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–æ
@dp.message_handler(commands=['mode'])
async def command_mode(msg: aiogram.types.Message):
    await msg.answer("–í—ã–±–æ—Ä –≤–∏–¥–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è", reply_markup=kb.inline_kb_mode)


@dp.message_handler(commands=['notification'])
async def command_notif(msg: aiogram.types.Message):
    await bot.send_message(msg.from_user.id,
                           "–ó–¥–µ—Å—å –Ω—É–∂–Ω–æ –æ–±—Å—É–¥–∏—Ç—å –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∏ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤—ã–±–æ—Ä –¥–Ω–µ–π")


# –í—ã–¥–∞—á–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —é–∑–≤–µ—Ä–æ–º –ª—é–±–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
@dp.message_handler(content_types=ContentType.ANY)
async def any_types_send(msg: aiogram.types.Message):
    full_name = msg.text.split(' ')
    surname = full_name[0]
    if surname == '–∫—É–∑':
        time.sleep(15)
    name = '' if len(full_name) < 2 else full_name[1]
    patronymic = '' if len(full_name) < 3 else full_name[2]
    test = Search()
    teachers = test.teachers_by_name(name, surname, patronymic)
    await bot.send_message(msg.from_user.id, teachers)
    # await bot.send_message(msg.from_user.id, 'üòê –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å!\n'
    #                                          '–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å /help')


if __name__ == '__main__':
    # 123
    aiogram.executor.start_polling(dp)
